
export default [
  {
    "title": "API Mocker",
    "description": "AI-powered mock API generator that creates realistic endpoints with smart data generation based on schema descriptions",
    "date": new Date("2024-03-08T00:00:00.000Z"),
    "tags": [
      "api",
      "mocking",
      "testing",
      "development",
      "ai"
    ],
    "demoUrl": "https://api-mocker-ai.dev",
    "sourceUrl": "https://github.com/experiments/api-mocker",
    "buildPrompt": "Create a mock API generator that uses AI to understand endpoint descriptions and generate realistic JSON responses with proper relationships and data types",
    "mock": true,
    "content": "# API Mocker\n\nGenerate realistic mock APIs with intelligent data relationships using natural language descriptions.\n\n## Features\n\n- **Schema-Free Setup**: Describe endpoints in plain English\n- **Intelligent Data Generation**: AI creates realistic, related data\n- **Relationship Mapping**: Automatically handles foreign keys and references\n- **Multiple Formats**: JSON, GraphQL, REST endpoints\n- **Real-time Updates**: Live API available instantly\n\n## How It Works\n\nSimply describe your API needs:\n- \"User management system with profiles and posts\"\n- \"E-commerce API with products, orders, and inventory\"\n- \"Social media API with users, posts, comments, and likes\"\n\nThe AI generates:\n- Realistic field names and data types\n- Proper relationships between entities\n- Consistent data patterns\n- Appropriate HTTP methods and status codes\n\n## Example Generation\n\nInput: \"Blog API with authors and posts\"\n\nGenerated endpoints:\n```\nGET /api/authors\nGET /api/authors/:id\nGET /api/posts\nGET /api/posts/:id\nGET /api/authors/:id/posts\nPOST /api/posts\nPUT /api/posts/:id\nDELETE /api/posts/:id\n```\n\nWith realistic data:\n```json\n{\n  \"author\": {\n    \"id\": 1,\n    \"name\": \"Sarah Chen\",\n    \"email\": \"sarah.chen@example.com\",\n    \"bio\": \"Tech writer and developer\",\n    \"joined\": \"2023-01-15T10:30:00Z\"\n  }\n}\n```\n\n## Tech Stack\n\n- Express.js for API hosting\n- OpenAI API for data generation\n- Faker.js for realistic data\n- JSON Server for quick deployment\n\n## Use Cases\n\n- Frontend development without backend\n- API design prototyping\n- Integration testing\n- Demo applications\n\nPerfect for developers who need realistic mock data without manual JSON creation.",
    "_meta": {
      "filePath": "api-mocker.mdx",
      "fileName": "api-mocker.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "api-mocker"
    },
    "mdx": "var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var A=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),P=(i,n)=>{for(var r in n)l(i,r,{get:n[r],enumerable:!0})},s=(i,n,r,a)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of m(n))!I.call(i,t)&&t!==r&&l(i,t,{get:()=>n[t],enumerable:!(a=u(n,t))||a.enumerable});return i};var T=(i,n,r)=>(r=i!=null?p(g(i)):{},s(n||!i||!i.__esModule?l(r,\"default\",{value:i,enumerable:!0}):r,i)),f=i=>s(l({},\"__esModule\",{value:!0}),i);var o=A((S,d)=>{d.exports=_jsx_runtime});var E={};P(E,{default:()=>h});var e=T(o());function c(i){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"API Mocker\"}),`\n`,(0,e.jsx)(n.p,{children:\"Generate realistic mock APIs with intelligent data relationships using natural language descriptions.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Schema-Free Setup\"}),\": Describe endpoints in plain English\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Intelligent Data Generation\"}),\": AI creates realistic, related data\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Relationship Mapping\"}),\": Automatically handles foreign keys and references\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Multiple Formats\"}),\": JSON, GraphQL, REST endpoints\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Real-time Updates\"}),\": Live API available instantly\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"How It Works\"}),`\n`,(0,e.jsx)(n.p,{children:\"Simply describe your API needs:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:'\"User management system with profiles and posts\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"E-commerce API with products, orders, and inventory\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"Social media API with users, posts, comments, and likes\"'}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"The AI generates:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Realistic field names and data types\"}),`\n`,(0,e.jsx)(n.li,{children:\"Proper relationships between entities\"}),`\n`,(0,e.jsx)(n.li,{children:\"Consistent data patterns\"}),`\n`,(0,e.jsx)(n.li,{children:\"Appropriate HTTP methods and status codes\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Generation\"}),`\n`,(0,e.jsx)(n.p,{children:'Input: \"Blog API with authors and posts\"'}),`\n`,(0,e.jsx)(n.p,{children:\"Generated endpoints:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:`GET /api/authors\nGET /api/authors/:id\nGET /api/posts\nGET /api/posts/:id\nGET /api/authors/:id/posts\nPOST /api/posts\nPUT /api/posts/:id\nDELETE /api/posts/:id\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"With realistic data:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-json\",children:`{\n  \"author\": {\n    \"id\": 1,\n    \"name\": \"Sarah Chen\",\n    \"email\": \"sarah.chen@example.com\",\n    \"bio\": \"Tech writer and developer\",\n    \"joined\": \"2023-01-15T10:30:00Z\"\n  }\n}\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Express.js for API hosting\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for data generation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Faker.js for realistic data\"}),`\n`,(0,e.jsx)(n.li,{children:\"JSON Server for quick deployment\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Use Cases\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Frontend development without backend\"}),`\n`,(0,e.jsx)(n.li,{children:\"API design prototyping\"}),`\n`,(0,e.jsx)(n.li,{children:\"Integration testing\"}),`\n`,(0,e.jsx)(n.li,{children:\"Demo applications\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Perfect for developers who need realistic mock data without manual JSON creation.\"})]})}function h(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(c,{...i})}):c(i)}return f(E);})();\n;return Component;",
    "url": "/lab/api-mocker",
    "slug": "api-mocker",
    "_id": "api-mocker.mdx",
    "_raw": {
      "sourceFilePath": "api-mocker.mdx",
      "sourceFileName": "api-mocker.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "api-mocker",
      "contentType": "mdx"
    }
  },
  {
    "title": "Color Palette AI",
    "description": "AI-powered color palette generator that creates brand-appropriate color schemes based on industry, mood, and style preferences",
    "date": new Date("2024-03-18T00:00:00.000Z"),
    "tags": [
      "design",
      "colors",
      "branding",
      "ai",
      "palette"
    ],
    "demoUrl": "https://color-palette-ai.dev",
    "sourceUrl": "https://github.com/experiments/color-palette-ai",
    "buildPrompt": "Create an AI color palette generator that understands brand context, industry standards, and psychological color theory to generate appropriate color schemes",
    "mock": true,
    "content": "# Color Palette AI\n\nGenerate intelligent color palettes tailored to your brand, industry, and design goals using AI-powered color theory.\n\n## Features\n\n- **Context-Aware Generation**: Understands industry standards and brand personality\n- **Psychological Insights**: Explains color psychology behind each palette\n- **Multiple Formats**: HEX, RGB, HSL, and CSS custom properties\n- **Accessibility Checking**: Ensures WCAG contrast compliance\n- **Export Options**: Sketch, Figma, Adobe, and CSS formats\n\n## Input Options\n\n**Brand Description**: \n- \"Sustainable tech startup focused on renewable energy\"\n- \"Luxury fashion brand targeting millennials\"\n- \"Playful children's education app\"\n\n**Industry Selection**:\n- Technology, Healthcare, Finance, Education, Entertainment\n- Retail, Food & Beverage, Non-profit, Creative\n\n**Mood & Style**:\n- Professional, Playful, Elegant, Bold, Minimalist\n- Warm, Cool, Vibrant, Muted, High-contrast\n\n## AI-Generated Insights\n\nEach palette includes:\n- **Primary Colors**: Main brand colors with usage guidelines\n- **Secondary Colors**: Supporting colors for variety\n- **Neutral Colors**: Grays and background colors\n- **Accent Colors**: Highlight and call-to-action colors\n- **Psychology Explanation**: Why these colors work for your brand\n\n## Example Output\n\n**Sustainable Tech Startup**:\n```css\n:root {\n  --primary-green: #2D7D32;      /* Trust, growth, sustainability */\n  --secondary-blue: #1976D2;     /* Innovation, reliability */\n  --accent-orange: #FF6F00;      /* Energy, optimism */\n  --neutral-gray: #546E7A;       /* Balance, professionalism */\n  --background: #FAFAFA;         /* Clean, modern */\n}\n```\n\n## Tech Stack\n\n- React with color picker components\n- OpenAI API for context understanding\n- Chroma.js for color manipulation\n- Color accessibility APIs\n\n## Use Cases\n\n- Brand identity development\n- Website and app design\n- Marketing material creation\n- Design system establishment\n\nPerfect for designers and developers who want data-driven color decisions backed by psychology and industry best practices.",
    "_meta": {
      "filePath": "color-palette-ai.mdx",
      "fileName": "color-palette-ai.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "color-palette-ai"
    },
    "mdx": "var Component=(()=>{var g=Object.create;var t=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var b=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),f=(r,n)=>{for(var i in n)t(r,i,{get:n[i],enumerable:!0})},c=(r,n,i,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let l of p(n))!m.call(r,l)&&l!==i&&t(r,l,{get:()=>n[l],enumerable:!(o=u(n,l))||o.enumerable});return r};var C=(r,n,i)=>(i=r!=null?g(y(r)):{},c(n||!r||!r.__esModule?t(i,\"default\",{value:r,enumerable:!0}):i,r)),x=r=>c(t({},\"__esModule\",{value:!0}),r);var d=b((F,a)=>{a.exports=_jsx_runtime});var A={};f(A,{default:()=>h});var e=C(d());function s(r){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Color Palette AI\"}),`\n`,(0,e.jsx)(n.p,{children:\"Generate intelligent color palettes tailored to your brand, industry, and design goals using AI-powered color theory.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Context-Aware Generation\"}),\": Understands industry standards and brand personality\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Psychological Insights\"}),\": Explains color psychology behind each palette\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Multiple Formats\"}),\": HEX, RGB, HSL, and CSS custom properties\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Accessibility Checking\"}),\": Ensures WCAG contrast compliance\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Export Options\"}),\": Sketch, Figma, Adobe, and CSS formats\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Input Options\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Brand Description\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:'\"Sustainable tech startup focused on renewable energy\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"Luxury fashion brand targeting millennials\"'}),`\n`,(0,e.jsx)(n.li,{children:`\"Playful children's education app\"`}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Industry Selection\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Technology, Healthcare, Finance, Education, Entertainment\"}),`\n`,(0,e.jsx)(n.li,{children:\"Retail, Food & Beverage, Non-profit, Creative\"}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Mood & Style\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Professional, Playful, Elegant, Bold, Minimalist\"}),`\n`,(0,e.jsx)(n.li,{children:\"Warm, Cool, Vibrant, Muted, High-contrast\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"AI-Generated Insights\"}),`\n`,(0,e.jsx)(n.p,{children:\"Each palette includes:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Primary Colors\"}),\": Main brand colors with usage guidelines\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Secondary Colors\"}),\": Supporting colors for variety\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Neutral Colors\"}),\": Grays and background colors\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Accent Colors\"}),\": Highlight and call-to-action colors\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Psychology Explanation\"}),\": Why these colors work for your brand\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Output\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Sustainable Tech Startup\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-css\",children:`:root {\n  --primary-green: #2D7D32;      /* Trust, growth, sustainability */\n  --secondary-blue: #1976D2;     /* Innovation, reliability */\n  --accent-orange: #FF6F00;      /* Energy, optimism */\n  --neutral-gray: #546E7A;       /* Balance, professionalism */\n  --background: #FAFAFA;         /* Clean, modern */\n}\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"React with color picker components\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for context understanding\"}),`\n`,(0,e.jsx)(n.li,{children:\"Chroma.js for color manipulation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Color accessibility APIs\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Use Cases\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Brand identity development\"}),`\n`,(0,e.jsx)(n.li,{children:\"Website and app design\"}),`\n`,(0,e.jsx)(n.li,{children:\"Marketing material creation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Design system establishment\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Perfect for designers and developers who want data-driven color decisions backed by psychology and industry best practices.\"})]})}function h(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(s,{...r})}):s(r)}return x(A);})();\n;return Component;",
    "url": "/lab/color-palette-ai",
    "slug": "color-palette-ai",
    "_id": "color-palette-ai.mdx",
    "_raw": {
      "sourceFilePath": "color-palette-ai.mdx",
      "sourceFileName": "color-palette-ai.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "color-palette-ai",
      "contentType": "mdx"
    }
  },
  {
    "title": "Commit Message AI",
    "description": "AI-generated git commit messages that follow conventional commit standards and accurately describe code changes",
    "date": new Date("2024-03-20T00:00:00.000Z"),
    "tags": [
      "git",
      "commits",
      "ai",
      "development",
      "automation"
    ],
    "demoUrl": "https://commit-ai.dev",
    "sourceUrl": "https://github.com/experiments/commit-message-ai",
    "buildPrompt": "Build a tool that analyzes git diffs and generates meaningful commit messages following conventional commit format with proper scope and description",
    "mock": true,
    "content": "# Commit Message AI\n\nGenerate meaningful, standardized git commit messages by analyzing your code changes with AI.\n\n## Features\n\n- **Diff Analysis**: Examines actual code changes to understand intent\n- **Conventional Commits**: Follows conventional commit specification\n- **Scope Detection**: Automatically identifies affected modules/components\n- **Breaking Changes**: Detects and flags breaking changes\n- **Multiple Options**: Generates several commit message variations\n\n## Conventional Commit Format\n\nGenerated messages follow the standard:\n```\n<type>(<scope>): <description>\n\n[optional body]\n\n[optional footer(s)]\n```\n\n## Supported Types\n\n- **feat**: New features\n- **fix**: Bug fixes\n- **docs**: Documentation changes\n- **style**: Code style changes\n- **refactor**: Code refactoring\n- **test**: Test additions/modifications\n- **chore**: Build process or auxiliary tool changes\n\n## Example Analysis\n\n**Git Diff**:\n```diff\ndiff --git a/src/components/Button.tsx b/src/components/Button.tsx\nindex 1234567..abcdefg 100644\n--- a/src/components/Button.tsx\n+++ b/src/components/Button.tsx\n@@ -1,8 +1,12 @@\n export interface ButtonProps {\n   children: React.ReactNode;\n+  variant?: 'primary' | 'secondary';\n+  size?: 'sm' | 'md' | 'lg';\n }\n\n-export function Button({ children }: ButtonProps) {\n-  return <button className=\"btn\">{children}</button>\n+export function Button({ children, variant = 'primary', size = 'md' }: ButtonProps) {\n+  const classes = `btn btn-${variant} btn-${size}`;\n+  return <button className={classes}>{children}</button>\n }\n```\n\n**Generated Messages**:\n1. `feat(components): add variant and size props to Button component`\n2. `feat(ui): enhance Button with variant and size styling options`\n3. `feat(button): add customizable variant and size properties`\n\n## Advanced Features\n\n**Breaking Change Detection**:\n```\nfeat(api)!: change user authentication endpoint structure\n\nBREAKING CHANGE: The /auth endpoint now requires email instead of username\n```\n\n**Multi-scope Changes**:\n```\nfeat(auth,ui): implement OAuth login with new button styles\n```\n\n**Issue Linking**:\n```\nfix(validation): resolve email regex pattern bug\n\nFixes #123\n```\n\n## Integration Options\n\n- **CLI Tool**: `npx commit-ai` in any git repository\n- **Git Hook**: Automatic message generation on commit\n- **VS Code Extension**: Generate messages from diff view\n- **GitHub Action**: PR title and description generation\n\n## Tech Stack\n\n- Node.js CLI with git integration\n- OpenAI API for change analysis\n- Simple-git for repository operations\n- Conventional commits parser\n\n## Configuration\n\nCustomize generation with `.commitai.json`:\n```json\n{\n  \"maxLength\": 72,\n  \"types\": [\"feat\", \"fix\", \"docs\"],\n  \"scopes\": [\"auth\", \"ui\", \"api\"],\n  \"includeBody\": true,\n  \"linkIssues\": true\n}\n```\n\n## Use Cases\n\n- Maintaining consistent commit history\n- Automating commit message writing\n- Learning conventional commit standards\n- Code review and change tracking\n\n## Benefits\n\n- **Consistency**: Standardized message format across team\n- **Accuracy**: Messages reflect actual code changes\n- **Speed**: Faster commit workflow\n- **Quality**: Better commit history for project maintenance\n\nPerfect for developers and teams who want professional commit messages without the manual effort of writing them.",
    "_meta": {
      "filePath": "commit-message-ai.mdx",
      "fileName": "commit-message-ai.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "commit-message-ai"
    },
    "mdx": "var Component=(()=>{var g=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),x=(i,n)=>{for(var t in n)o(i,t,{get:n[t],enumerable:!0})},l=(i,n,t,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of u(n))!f.call(i,r)&&r!==t&&o(i,r,{get:()=>n[r],enumerable:!(c=m(n,r))||c.enumerable});return i};var C=(i,n,t)=>(t=i!=null?g(p(i)):{},l(n||!i||!i.__esModule?o(t,\"default\",{value:i,enumerable:!0}):t,i)),w=i=>l(o({},\"__esModule\",{value:!0}),i);var a=y((B,s)=>{s.exports=_jsx_runtime});var b={};x(b,{default:()=>h});var e=C(a());function d(i){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Commit Message AI\"}),`\n`,(0,e.jsx)(n.p,{children:\"Generate meaningful, standardized git commit messages by analyzing your code changes with AI.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Diff Analysis\"}),\": Examines actual code changes to understand intent\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Conventional Commits\"}),\": Follows conventional commit specification\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Scope Detection\"}),\": Automatically identifies affected modules/components\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Breaking Changes\"}),\": Detects and flags breaking changes\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Multiple Options\"}),\": Generates several commit message variations\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Conventional Commit Format\"}),`\n`,(0,e.jsx)(n.p,{children:\"Generated messages follow the standard:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:`<type>(<scope>): <description>\n\n[optional body]\n\n[optional footer(s)]\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Supported Types\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"feat\"}),\": New features\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"fix\"}),\": Bug fixes\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"docs\"}),\": Documentation changes\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"style\"}),\": Code style changes\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"refactor\"}),\": Code refactoring\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"test\"}),\": Test additions/modifications\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"chore\"}),\": Build process or auxiliary tool changes\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Analysis\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Git Diff\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-diff\",children:`diff --git a/src/components/Button.tsx b/src/components/Button.tsx\nindex 1234567..abcdefg 100644\n--- a/src/components/Button.tsx\n+++ b/src/components/Button.tsx\n@@ -1,8 +1,12 @@\n export interface ButtonProps {\n   children: React.ReactNode;\n+  variant?: 'primary' | 'secondary';\n+  size?: 'sm' | 'md' | 'lg';\n }\n\n-export function Button({ children }: ButtonProps) {\n-  return <button className=\"btn\">{children}</button>\n+export function Button({ children, variant = 'primary', size = 'md' }: ButtonProps) {\n+  const classes = \\`btn btn-\\${variant} btn-\\${size}\\`;\n+  return <button className={classes}>{children}</button>\n }\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Generated Messages\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"feat(components): add variant and size props to Button component\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"feat(ui): enhance Button with variant and size styling options\"})}),`\n`,(0,e.jsx)(n.li,{children:(0,e.jsx)(n.code,{children:\"feat(button): add customizable variant and size properties\"})}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Advanced Features\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Breaking Change Detection\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:`feat(api)!: change user authentication endpoint structure\n\nBREAKING CHANGE: The /auth endpoint now requires email instead of username\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Multi-scope Changes\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:`feat(auth,ui): implement OAuth login with new button styles\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Issue Linking\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:`fix(validation): resolve email regex pattern bug\n\nFixes #123\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Integration Options\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"CLI Tool\"}),\": \",(0,e.jsx)(n.code,{children:\"npx commit-ai\"}),\" in any git repository\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Git Hook\"}),\": Automatic message generation on commit\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"VS Code Extension\"}),\": Generate messages from diff view\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"GitHub Action\"}),\": PR title and description generation\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Node.js CLI with git integration\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for change analysis\"}),`\n`,(0,e.jsx)(n.li,{children:\"Simple-git for repository operations\"}),`\n`,(0,e.jsx)(n.li,{children:\"Conventional commits parser\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Configuration\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Customize generation with \",(0,e.jsx)(n.code,{children:\".commitai.json\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-json\",children:`{\n  \"maxLength\": 72,\n  \"types\": [\"feat\", \"fix\", \"docs\"],\n  \"scopes\": [\"auth\", \"ui\", \"api\"],\n  \"includeBody\": true,\n  \"linkIssues\": true\n}\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Use Cases\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Maintaining consistent commit history\"}),`\n`,(0,e.jsx)(n.li,{children:\"Automating commit message writing\"}),`\n`,(0,e.jsx)(n.li,{children:\"Learning conventional commit standards\"}),`\n`,(0,e.jsx)(n.li,{children:\"Code review and change tracking\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Benefits\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Consistency\"}),\": Standardized message format across team\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Accuracy\"}),\": Messages reflect actual code changes\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Speed\"}),\": Faster commit workflow\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Quality\"}),\": Better commit history for project maintenance\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Perfect for developers and teams who want professional commit messages without the manual effort of writing them.\"})]})}function h(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(d,{...i})}):d(i)}return w(b);})();\n;return Component;",
    "url": "/lab/commit-message-ai",
    "slug": "commit-message-ai",
    "_id": "commit-message-ai.mdx",
    "_raw": {
      "sourceFilePath": "commit-message-ai.mdx",
      "sourceFileName": "commit-message-ai.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "commit-message-ai",
      "contentType": "mdx"
    }
  },
  {
    "title": "Component Variants",
    "description": "Dynamic component variant generator that creates multiple design variations of React components using AI",
    "date": new Date("2024-03-10T00:00:00.000Z"),
    "tags": [
      "react",
      "components",
      "variants",
      "design-system",
      "ai"
    ],
    "demoUrl": "https://component-variants.dev",
    "sourceUrl": "https://github.com/experiments/component-variants",
    "buildPrompt": "Build a tool that takes a base React component and generates multiple design variants (different colors, sizes, styles) with live preview and code export",
    "mock": true,
    "content": "# Component Variants\n\nAutomatically generate multiple design variations of your React components with AI-powered styling suggestions.\n\n## Features\n\n- **Base Component Import**: Upload or paste your existing component code\n- **Variant Generation**: AI creates multiple design variations automatically\n- **Live Preview**: See all variants rendered side-by-side\n- **Export Options**: Download individual variants or complete design system\n- **Prop Mapping**: Automatically generates prop interfaces for variants\n\n## Supported Variations\n\n- **Color Schemes**: Primary, secondary, success, warning, danger themes\n- **Sizes**: XS through 3XL with proper scaling\n- **Styles**: Filled, outlined, ghost, gradient variations\n- **States**: Hover, focus, active, disabled states\n\n## Example Input/Output\n\nInput a basic button component:\n```jsx\nfunction Button({ children }) {\n  return <button>{children}</button>\n}\n```\n\nOutput includes variants like:\n- `ButtonPrimary`, `ButtonSecondary`, `ButtonDanger`\n- `ButtonSmall`, `ButtonLarge`\n- `ButtonOutlined`, `ButtonGhost`\n\n## Tech Stack\n\n- React 18 with TypeScript\n- Styled Components for dynamic styling\n- OpenAI API for variant generation\n- Storybook integration for documentation\n\n## Use Cases\n\n- Rapid prototyping of design systems\n- Creating consistent component libraries\n- Exploring design possibilities\n- Generating component documentation\n\nSaves hours of manual variant creation while maintaining design consistency.",
    "_meta": {
      "filePath": "component-variants.mdx",
      "fileName": "component-variants.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "component-variants"
    },
    "mdx": "var Component=(()=>{var u=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var v=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),f=(i,n)=>{for(var t in n)l(i,t,{get:n[t],enumerable:!0})},c=(i,n,t,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of g(n))!y.call(i,r)&&r!==t&&l(i,r,{get:()=>n[r],enumerable:!(o=p(n,r))||o.enumerable});return i};var S=(i,n,t)=>(t=i!=null?u(m(i)):{},c(n||!i||!i.__esModule?l(t,\"default\",{value:i,enumerable:!0}):t,i)),x=i=>c(l({},\"__esModule\",{value:!0}),i);var s=v((B,d)=>{d.exports=_jsx_runtime});var b={};f(b,{default:()=>h});var e=S(s());function a(i){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Component Variants\"}),`\n`,(0,e.jsx)(n.p,{children:\"Automatically generate multiple design variations of your React components with AI-powered styling suggestions.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Base Component Import\"}),\": Upload or paste your existing component code\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Variant Generation\"}),\": AI creates multiple design variations automatically\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Live Preview\"}),\": See all variants rendered side-by-side\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Export Options\"}),\": Download individual variants or complete design system\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Prop Mapping\"}),\": Automatically generates prop interfaces for variants\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Supported Variations\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Color Schemes\"}),\": Primary, secondary, success, warning, danger themes\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Sizes\"}),\": XS through 3XL with proper scaling\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Styles\"}),\": Filled, outlined, ghost, gradient variations\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"States\"}),\": Hover, focus, active, disabled states\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Input/Output\"}),`\n`,(0,e.jsx)(n.p,{children:\"Input a basic button component:\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`function Button({ children }) {\n  return <button>{children}</button>\n}\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Output includes variants like:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"ButtonPrimary\"}),\", \",(0,e.jsx)(n.code,{children:\"ButtonSecondary\"}),\", \",(0,e.jsx)(n.code,{children:\"ButtonDanger\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"ButtonSmall\"}),\", \",(0,e.jsx)(n.code,{children:\"ButtonLarge\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"ButtonOutlined\"}),\", \",(0,e.jsx)(n.code,{children:\"ButtonGhost\"})]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"React 18 with TypeScript\"}),`\n`,(0,e.jsx)(n.li,{children:\"Styled Components for dynamic styling\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for variant generation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Storybook integration for documentation\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Use Cases\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Rapid prototyping of design systems\"}),`\n`,(0,e.jsx)(n.li,{children:\"Creating consistent component libraries\"}),`\n`,(0,e.jsx)(n.li,{children:\"Exploring design possibilities\"}),`\n`,(0,e.jsx)(n.li,{children:\"Generating component documentation\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Saves hours of manual variant creation while maintaining design consistency.\"})]})}function h(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(a,{...i})}):a(i)}return x(b);})();\n;return Component;",
    "url": "/lab/component-variants",
    "slug": "component-variants",
    "_id": "component-variants.mdx",
    "_raw": {
      "sourceFilePath": "component-variants.mdx",
      "sourceFileName": "component-variants.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "component-variants",
      "contentType": "mdx"
    }
  },
  {
    "title": "CSS Grid Generator",
    "description": "AI-powered tool that generates CSS Grid layouts based on natural language descriptions and visual mockups",
    "date": new Date("2024-03-15T00:00:00.000Z"),
    "tags": [
      "css",
      "grid",
      "ai",
      "layout",
      "generator"
    ],
    "demoUrl": "https://css-grid-ai.dev",
    "sourceUrl": "https://github.com/experiments/css-grid-generator",
    "buildPrompt": "Create a CSS Grid layout generator that takes natural language input like 'create a 3-column layout with sidebar and main content' and outputs clean CSS Grid code with visual preview",
    "mock": true,
    "content": "# CSS Grid Generator\n\nAn intelligent CSS Grid layout generator that transforms natural language descriptions into production-ready CSS Grid code.\n\n## Features\n\n- **Natural Language Input**: Describe your layout in plain English\n- **Visual Preview**: See your grid layout rendered in real-time\n- **Responsive Variants**: Automatically generate mobile-friendly versions\n- **Clean Code Output**: Export optimized CSS with proper naming conventions\n\n## How It Works\n\nThe tool uses AI to parse layout descriptions and translate them into semantic CSS Grid properties. Simply describe what you want:\n\n- \"Three equal columns with gaps\"\n- \"Header, main content, sidebar, footer layout\"\n- \"Masonry-style grid for image gallery\"\n\n## Tech Stack\n\n- Next.js for the interface\n- OpenAI API for natural language processing\n- CSS Grid for layout generation\n- Tailwind CSS for styling\n\n## Example Output\n\n```css\n.grid-container {\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas: \n    \"header header\"\n    \"main sidebar\"\n    \"footer footer\";\n  gap: 1rem;\n}\n```\n\nPerfect for developers who want to quickly prototype layouts without memorizing complex Grid syntax.",
    "_meta": {
      "filePath": "css-grid-generator.mdx",
      "fileName": "css-grid-generator.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "css-grid-generator"
    },
    "mdx": "var Component=(()=>{var u=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),S=(r,n)=>{for(var i in n)l(r,i,{get:n[i],enumerable:!0})},a=(r,n,i,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of g(n))!y.call(r,t)&&t!==i&&l(r,t,{get:()=>n[t],enumerable:!(o=p(n,t))||o.enumerable});return r};var x=(r,n,i)=>(i=r!=null?u(m(r)):{},a(n||!r||!r.__esModule?l(i,\"default\",{value:r,enumerable:!0}):i,r)),w=r=>a(l({},\"__esModule\",{value:!0}),r);var s=f((_,d)=>{d.exports=_jsx_runtime});var C={};S(C,{default:()=>h});var e=x(s());function c(r){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"CSS Grid Generator\"}),`\n`,(0,e.jsx)(n.p,{children:\"An intelligent CSS Grid layout generator that transforms natural language descriptions into production-ready CSS Grid code.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Natural Language Input\"}),\": Describe your layout in plain English\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Visual Preview\"}),\": See your grid layout rendered in real-time\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Responsive Variants\"}),\": Automatically generate mobile-friendly versions\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Clean Code Output\"}),\": Export optimized CSS with proper naming conventions\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"How It Works\"}),`\n`,(0,e.jsx)(n.p,{children:\"The tool uses AI to parse layout descriptions and translate them into semantic CSS Grid properties. Simply describe what you want:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:'\"Three equal columns with gaps\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"Header, main content, sidebar, footer layout\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"Masonry-style grid for image gallery\"'}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Next.js for the interface\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for natural language processing\"}),`\n`,(0,e.jsx)(n.li,{children:\"CSS Grid for layout generation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Tailwind CSS for styling\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Output\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-css\",children:`.grid-container {\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas: \n    \"header header\"\n    \"main sidebar\"\n    \"footer footer\";\n  gap: 1rem;\n}\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Perfect for developers who want to quickly prototype layouts without memorizing complex Grid syntax.\"})]})}function h(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(c,{...r})}):c(r)}return w(C);})();\n;return Component;",
    "url": "/lab/css-grid-generator",
    "slug": "css-grid-generator",
    "_id": "css-grid-generator.mdx",
    "_raw": {
      "sourceFilePath": "css-grid-generator.mdx",
      "sourceFileName": "css-grid-generator.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "css-grid-generator",
      "contentType": "mdx"
    }
  },
  {
    "title": "AI-Powered CSS Theme Generator",
    "description": "Interactive tool that generates complete CSS theme systems from a single color input using AI-suggested complementary palettes",
    "date": new Date("2024-11-25T00:00:00.000Z"),
    "tags": [
      "css",
      "ai",
      "design-tools",
      "experiment"
    ],
    "demoUrl": "https://codepen.io/futurethang/pen/css-theme-gen",
    "buildPrompt": "Create a tool that generates a complete CSS theme (colors, typography, spacing) from a single brand color input, with AI suggestions for complementary colors",
    "mock": true,
    "content": "Built this in 2 hours with Claude's help to solve a recurring problem: clients who have \"a brand color\" but need a complete design system. The tool generates a full CSS theme with proper color scales, semantic tokens, and accessibility checks.\n\n## How It Works\n\n1. **Input a single hex color** - Your brand's primary color\n2. **AI generates complementary colors** - Using color theory algorithms\n3. **Automatic scale generation** - Creates 10 shades (50-900) for each color  \n4. **Semantic token mapping** - Maps colors to purpose (primary, success, warning, etc.)\n5. **Copy-paste CSS** - Get variables ready for your project\n\n## Key Features\n\n- **WCAG contrast checking** - Ensures text/background combinations are accessible\n- **Multiple export formats** - CSS variables, Sass, JSON tokens\n- **Real-time preview** - See your theme applied to common UI components\n- **Color blindness simulation** - Check how your palette appears to all users\n\n## AI Integration\n\nUsed Claude to implement the color theory algorithms. The trickiest part was generating perceptually uniform color scales - traditional HSL manipulation creates muddy mid-tones. Claude helped implement a LAB color space approach that maintains vibrancy across the scale.\n\n```javascript\n// Claude-assisted perceptual scaling\nfunction generateColorScale(baseColor, steps = 10) {\n  const lab = hexToLab(baseColor);\n  const scale = [];\n  \n  for (let i = 0; i < steps; i++) {\n    const lightness = 95 - (i * 9); // Even distribution\n    scale.push(labToHex({\n      ...lab,\n      l: lightness\n    }));\n  }\n  \n  return scale;\n}\n```\n\n## Learnings\n\n- Color math is harder than it looks\n- Accessibility should be built-in, not bolted on\n- Real-time feedback dramatically improves UX\n- AI excels at implementing complex algorithms from descriptions\n\nThis experiment led to a consulting project where I built a custom theme generator for a design system. Sometimes the best portfolio pieces are tools that solve your own problems!",
    "_meta": {
      "filePath": "css-theme-generator.mdx",
      "fileName": "css-theme-generator.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "css-theme-generator"
    },
    "mdx": "var Component=(()=>{var p=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var y=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),C=(r,e)=>{for(var o in e)t(r,o,{get:e[o],enumerable:!0})},s=(r,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!b.call(r,l)&&l!==o&&t(r,l,{get:()=>e[l],enumerable:!(i=m(e,l))||i.enumerable});return r};var x=(r,e,o)=>(o=r!=null?p(g(r)):{},s(e||!r||!r.__esModule?t(o,\"default\",{value:r,enumerable:!0}):o,r)),f=r=>s(t({},\"__esModule\",{value:!0}),r);var c=y((w,a)=>{a.exports=_jsx_runtime});var S={};C(S,{default:()=>d});var n=x(c());function h(r){let e={code:\"code\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:`Built this in 2 hours with Claude's help to solve a recurring problem: clients who have \"a brand color\" but need a complete design system. The tool generates a full CSS theme with proper color scales, semantic tokens, and accessibility checks.`}),`\n`,(0,n.jsx)(e.h2,{children:\"How It Works\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Input a single hex color\"}),\" - Your brand's primary color\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AI generates complementary colors\"}),\" - Using color theory algorithms\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Automatic scale generation\"}),\" - Creates 10 shades (50-900) for each color\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Semantic token mapping\"}),\" - Maps colors to purpose (primary, success, warning, etc.)\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Copy-paste CSS\"}),\" - Get variables ready for your project\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Key Features\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"WCAG contrast checking\"}),\" - Ensures text/background combinations are accessible\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Multiple export formats\"}),\" - CSS variables, Sass, JSON tokens\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Real-time preview\"}),\" - See your theme applied to common UI components\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Color blindness simulation\"}),\" - Check how your palette appears to all users\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"AI Integration\"}),`\n`,(0,n.jsx)(e.p,{children:\"Used Claude to implement the color theory algorithms. The trickiest part was generating perceptually uniform color scales - traditional HSL manipulation creates muddy mid-tones. Claude helped implement a LAB color space approach that maintains vibrancy across the scale.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-javascript\",children:`// Claude-assisted perceptual scaling\nfunction generateColorScale(baseColor, steps = 10) {\n  const lab = hexToLab(baseColor);\n  const scale = [];\n  \n  for (let i = 0; i < steps; i++) {\n    const lightness = 95 - (i * 9); // Even distribution\n    scale.push(labToHex({\n      ...lab,\n      l: lightness\n    }));\n  }\n  \n  return scale;\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Learnings\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Color math is harder than it looks\"}),`\n`,(0,n.jsx)(e.li,{children:\"Accessibility should be built-in, not bolted on\"}),`\n`,(0,n.jsx)(e.li,{children:\"Real-time feedback dramatically improves UX\"}),`\n`,(0,n.jsx)(e.li,{children:\"AI excels at implementing complex algorithms from descriptions\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"This experiment led to a consulting project where I built a custom theme generator for a design system. Sometimes the best portfolio pieces are tools that solve your own problems!\"})]})}function d(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}return f(S);})();\n;return Component;",
    "url": "/lab/css-theme-generator",
    "slug": "css-theme-generator",
    "_id": "css-theme-generator.mdx",
    "_raw": {
      "sourceFilePath": "css-theme-generator.mdx",
      "sourceFileName": "css-theme-generator.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "css-theme-generator",
      "contentType": "mdx"
    }
  },
  {
    "title": "Markdown to Slides",
    "description": "Convert markdown documents into beautiful presentation slides with AI-powered layout optimization and design suggestions",
    "date": new Date("2024-03-16T00:00:00.000Z"),
    "tags": [
      "markdown",
      "presentations",
      "slides",
      "ai",
      "design"
    ],
    "demoUrl": "https://md-to-slides.dev",
    "sourceUrl": "https://github.com/experiments/markdown-to-slides",
    "buildPrompt": "Create a tool that converts markdown files into presentation slides with intelligent slide breaks, layout optimization, and design theme application",
    "mock": true,
    "content": "# Markdown to Slides\n\nTransform markdown documents into professional presentation slides with AI-powered layout and design optimization.\n\n## Features\n\n- **Intelligent Slide Breaks**: AI determines optimal content distribution\n- **Layout Optimization**: Automatically chooses best layouts for content types\n- **Theme Generation**: AI-suggested themes based on content analysis\n- **Interactive Elements**: Convert lists to animations and transitions\n- **Export Options**: PDF, PowerPoint, HTML, and web-hosted presentations\n\n## How It Works\n\n**Input**: Standard markdown with headers, lists, code blocks, and images\n**Processing**: AI analyzes content structure and generates slide layouts\n**Output**: Professional presentation with optimized visual hierarchy\n\n## Content Analysis\n\nThe AI identifies and optimizes:\n- **Title Slides**: H1 headers become section dividers\n- **Content Slides**: H2/H3 headers with supporting content\n- **List Presentations**: Bullet points with progressive disclosure\n- **Code Demonstrations**: Syntax-highlighted code with explanations\n- **Image Layouts**: Optimal image placement and sizing\n\n## Example Transformation\n\n**Markdown Input**:\n```markdown\n# Project Overview\n\n## Problem Statement\n- User engagement is declining\n- Complex navigation structure\n- Performance issues on mobile\n\n## Solution Approach\n- Redesign user interface\n- Implement progressive web app\n- Optimize for mobile-first\n\n## Expected Results\nThe new design should improve:\n1. User retention by 25%\n2. Page load speed by 40%\n3. Mobile conversion rates\n```\n\n**Generated Slides**:\n1. **Title Slide**: \"Project Overview\" with clean typography\n2. **Problem Slide**: Animated bullet points with icons\n3. **Solution Slide**: Process flow with visual elements\n4. **Results Slide**: Metrics with progress indicators\n\n## Design Themes\n\nAI suggests themes based on content:\n- **Technical**: Clean, code-focused layouts\n- **Business**: Professional, data-driven designs\n- **Creative**: Visual-heavy, artistic layouts\n- **Educational**: Clear, structured presentation style\n\n## Tech Stack\n\n- Unified (remark/rehype) for markdown parsing\n- React for slide rendering\n- Reveal.js for presentation engine\n- OpenAI API for content analysis\n- Canvas API for custom graphics\n\n## Export Formats\n\n- **Web Presentation**: Hosted, shareable URL\n- **PDF Export**: High-quality printable slides\n- **PowerPoint**: Native .pptx for editing\n- **HTML Package**: Self-contained presentation\n\n## Use Cases\n\n- Technical documentation to presentations\n- Blog posts to conference talks\n- README files to project pitches\n- Meeting notes to stakeholder presentations\n\nPerfect for developers and content creators who want to quickly turn written content into engaging presentations.",
    "_meta": {
      "filePath": "markdown-to-slides.mdx",
      "fileName": "markdown-to-slides.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "markdown-to-slides"
    },
    "mdx": "var Component=(()=>{var g=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var f=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),y=(i,n)=>{for(var t in n)l(i,t,{get:n[t],enumerable:!0})},o=(i,n,t,s)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of u(n))!w.call(i,r)&&r!==t&&l(i,r,{get:()=>n[r],enumerable:!(s=p(n,r))||s.enumerable});return i};var P=(i,n,t)=>(t=i!=null?g(m(i)):{},o(n||!i||!i.__esModule?l(t,\"default\",{value:i,enumerable:!0}):t,i)),v=i=>o(l({},\"__esModule\",{value:!0}),i);var c=f((I,d)=>{d.exports=_jsx_runtime});var b={};y(b,{default:()=>h});var e=P(c());function a(i){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Markdown to Slides\"}),`\n`,(0,e.jsx)(n.p,{children:\"Transform markdown documents into professional presentation slides with AI-powered layout and design optimization.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Intelligent Slide Breaks\"}),\": AI determines optimal content distribution\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Layout Optimization\"}),\": Automatically chooses best layouts for content types\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Theme Generation\"}),\": AI-suggested themes based on content analysis\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Interactive Elements\"}),\": Convert lists to animations and transitions\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Export Options\"}),\": PDF, PowerPoint, HTML, and web-hosted presentations\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"How It Works\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Input\"}),`: Standard markdown with headers, lists, code blocks, and images\n`,(0,e.jsx)(n.strong,{children:\"Processing\"}),`: AI analyzes content structure and generates slide layouts\n`,(0,e.jsx)(n.strong,{children:\"Output\"}),\": Professional presentation with optimized visual hierarchy\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Content Analysis\"}),`\n`,(0,e.jsx)(n.p,{children:\"The AI identifies and optimizes:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Title Slides\"}),\": H1 headers become section dividers\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Content Slides\"}),\": H2/H3 headers with supporting content\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"List Presentations\"}),\": Bullet points with progressive disclosure\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Code Demonstrations\"}),\": Syntax-highlighted code with explanations\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Image Layouts\"}),\": Optimal image placement and sizing\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Transformation\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Markdown Input\"}),\":\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-markdown\",children:`# Project Overview\n\n## Problem Statement\n- User engagement is declining\n- Complex navigation structure\n- Performance issues on mobile\n\n## Solution Approach\n- Redesign user interface\n- Implement progressive web app\n- Optimize for mobile-first\n\n## Expected Results\nThe new design should improve:\n1. User retention by 25%\n2. Page load speed by 40%\n3. Mobile conversion rates\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Generated Slides\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Title Slide\"}),': \"Project Overview\" with clean typography']}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Problem Slide\"}),\": Animated bullet points with icons\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Solution Slide\"}),\": Process flow with visual elements\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Results Slide\"}),\": Metrics with progress indicators\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Design Themes\"}),`\n`,(0,e.jsx)(n.p,{children:\"AI suggests themes based on content:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Technical\"}),\": Clean, code-focused layouts\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Business\"}),\": Professional, data-driven designs\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Creative\"}),\": Visual-heavy, artistic layouts\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Educational\"}),\": Clear, structured presentation style\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Unified (remark/rehype) for markdown parsing\"}),`\n`,(0,e.jsx)(n.li,{children:\"React for slide rendering\"}),`\n`,(0,e.jsx)(n.li,{children:\"Reveal.js for presentation engine\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for content analysis\"}),`\n`,(0,e.jsx)(n.li,{children:\"Canvas API for custom graphics\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Export Formats\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Web Presentation\"}),\": Hosted, shareable URL\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"PDF Export\"}),\": High-quality printable slides\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"PowerPoint\"}),\": Native .pptx for editing\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"HTML Package\"}),\": Self-contained presentation\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Use Cases\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Technical documentation to presentations\"}),`\n`,(0,e.jsx)(n.li,{children:\"Blog posts to conference talks\"}),`\n`,(0,e.jsx)(n.li,{children:\"README files to project pitches\"}),`\n`,(0,e.jsx)(n.li,{children:\"Meeting notes to stakeholder presentations\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Perfect for developers and content creators who want to quickly turn written content into engaging presentations.\"})]})}function h(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(a,{...i})}):a(i)}return v(b);})();\n;return Component;",
    "url": "/lab/markdown-to-slides",
    "slug": "markdown-to-slides",
    "_id": "markdown-to-slides.mdx",
    "_raw": {
      "sourceFilePath": "markdown-to-slides.mdx",
      "sourceFileName": "markdown-to-slides.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "markdown-to-slides",
      "contentType": "mdx"
    }
  },
  {
    "title": "Regex Explainer",
    "description": "Natural language regex explanation tool that breaks down complex regular expressions into human-readable descriptions",
    "date": new Date("2024-03-12T00:00:00.000Z"),
    "tags": [
      "regex",
      "explanation",
      "learning",
      "development",
      "ai"
    ],
    "demoUrl": "https://regex-explainer.dev",
    "sourceUrl": "https://github.com/experiments/regex-explainer",
    "buildPrompt": "Build a tool that takes complex regular expressions and explains them in plain English, with visual breakdown and test examples",
    "mock": true,
    "content": "# Regex Explainer\n\nTransform cryptic regular expressions into clear, human-readable explanations with visual breakdown and examples.\n\n## Features\n\n- **Plain English Explanations**: Convert regex patterns to natural language\n- **Visual Breakdown**: Highlight and explain each part of the pattern\n- **Live Testing**: Test regex against sample inputs in real-time\n- **Example Generation**: AI creates relevant test cases\n- **Pattern Variations**: Suggest alternative regex approaches\n\n## How It Works\n\nPaste any regular expression and get:\n1. **Overall Purpose**: What the regex is trying to match\n2. **Part-by-Part Breakdown**: Each component explained\n3. **Visual Highlighting**: Color-coded pattern segments\n4. **Test Cases**: Examples of matching and non-matching strings\n5. **Common Pitfalls**: Potential issues and edge cases\n\n## Example Explanation\n\n**Input regex:**\n```\n^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$\n```\n\n**Output:**\n\n**Purpose**: Validates email addresses according to RFC 5322 specification\n\n**Breakdown**:\n- `^` - Start of string\n- `(?:...)` - Non-capturing group for email username  \n- Valid username characters with special symbols allowed\n- `@` - Required @ symbol  \n- Domain validation with support for both domain names and IP addresses\n- `$` - End of string\n\n## Tech Stack\n\n- React with syntax highlighting\n- OpenAI API for explanations\n- RegExp parser for pattern analysis\n- Monaco Editor for regex input\n\n## Use Cases\n\n- Learning regular expressions\n- Debugging complex patterns\n- Code review and documentation\n- Teaching regex concepts\n\nMakes regex accessible to developers of all skill levels.",
    "_meta": {
      "filePath": "regex-explainer.mdx",
      "fileName": "regex-explainer.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "regex-explainer"
    },
    "mdx": "var Component=(()=>{var x=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),b=(r,n)=>{for(var i in n)a(r,i,{get:n[i],enumerable:!0})},c=(r,n,i,t)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let l of p(n))!m.call(r,l)&&l!==i&&a(r,l,{get:()=>n[l],enumerable:!(t=g(n,l))||t.enumerable});return r};var w=(r,n,i)=>(i=r!=null?x(u(r)):{},c(n||!r||!r.__esModule?a(i,\"default\",{value:r,enumerable:!0}):i,r)),E=r=>c(a({},\"__esModule\",{value:!0}),r);var d=f((z,s)=>{s.exports=_jsx_runtime});var P={};b(P,{default:()=>h});var e=w(d());function o(r){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"Regex Explainer\"}),`\n`,(0,e.jsx)(n.p,{children:\"Transform cryptic regular expressions into clear, human-readable explanations with visual breakdown and examples.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Plain English Explanations\"}),\": Convert regex patterns to natural language\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Visual Breakdown\"}),\": Highlight and explain each part of the pattern\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Live Testing\"}),\": Test regex against sample inputs in real-time\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Example Generation\"}),\": AI creates relevant test cases\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Pattern Variations\"}),\": Suggest alternative regex approaches\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"How It Works\"}),`\n`,(0,e.jsx)(n.p,{children:\"Paste any regular expression and get:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Overall Purpose\"}),\": What the regex is trying to match\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Part-by-Part Breakdown\"}),\": Each component explained\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Visual Highlighting\"}),\": Color-coded pattern segments\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Test Cases\"}),\": Examples of matching and non-matching strings\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Common Pitfalls\"}),\": Potential issues and edge cases\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Explanation\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Input regex:\"})}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{children:`^(?:[a-z0-9!#$%&'*+/=?^_\\`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_\\`{|}~-]+)*|\"(?:[\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7f]|\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0e-\\\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x21-\\\\x5a\\\\x53-\\\\x7f]|\\\\\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0e-\\\\x7f])+)\\\\])$\n`})}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Output:\"})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Purpose\"}),\": Validates email addresses according to RFC 5322 specification\"]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Breakdown\"}),\":\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"^\"}),\" - Start of string\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"(?:...)\"}),\" - Non-capturing group for email username\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Valid username characters with special symbols allowed\"}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"@\"}),\" - Required @ symbol\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Domain validation with support for both domain names and IP addresses\"}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"$\"}),\" - End of string\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"React with syntax highlighting\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for explanations\"}),`\n`,(0,e.jsx)(n.li,{children:\"RegExp parser for pattern analysis\"}),`\n`,(0,e.jsx)(n.li,{children:\"Monaco Editor for regex input\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Use Cases\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Learning regular expressions\"}),`\n`,(0,e.jsx)(n.li,{children:\"Debugging complex patterns\"}),`\n`,(0,e.jsx)(n.li,{children:\"Code review and documentation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Teaching regex concepts\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Makes regex accessible to developers of all skill levels.\"})]})}function h(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(o,{...r})}):o(r)}return E(P);})();\n;return Component;",
    "url": "/lab/regex-explainer",
    "slug": "regex-explainer",
    "_id": "regex-explainer.mdx",
    "_raw": {
      "sourceFilePath": "regex-explainer.mdx",
      "sourceFileName": "regex-explainer.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "regex-explainer",
      "contentType": "mdx"
    }
  },
  {
    "title": "SQL Optimizer",
    "description": "AI-powered SQL query optimization tool that analyzes queries and provides performance improvement suggestions with explanations",
    "date": new Date("2024-03-14T00:00:00.000Z"),
    "tags": [
      "sql",
      "optimization",
      "database",
      "performance",
      "ai"
    ],
    "demoUrl": "https://sql-optimizer-ai.dev",
    "sourceUrl": "https://github.com/experiments/sql-optimizer",
    "buildPrompt": "Build a SQL query optimizer that uses AI to analyze queries, identify performance bottlenecks, and suggest optimizations with detailed explanations",
    "mock": true,
    "content": "# SQL Optimizer\n\nAnalyze and optimize SQL queries with AI-powered performance suggestions and detailed explanations.\n\n## Features\n\n- **Query Analysis**: Deep analysis of SQL structure and performance patterns\n- **Optimization Suggestions**: Specific recommendations for improvement\n- **Performance Metrics**: Estimated execution time and resource usage\n- **Index Recommendations**: Suggested indexes for better performance\n- **Query Rewriting**: Alternative query structures that perform better\n\n## Optimization Categories\n\n**Indexing**:\n- Missing index identification\n- Composite index suggestions\n- Unused index detection\n\n**Query Structure**:\n- JOIN optimization\n- Subquery to JOIN conversion\n- WHERE clause improvements\n\n**Performance Patterns**:\n- N+1 query detection\n- Inefficient LIKE patterns\n- Unnecessary DISTINCT usage\n\n## Example Optimization\n\n**Original Query**:\n```sql\nSELECT * FROM users u\nWHERE u.email LIKE '%@gmail.com%'\nAND u.created_at > '2023-01-01'\nORDER BY u.name;\n```\n\n**AI Analysis**:\n- ⚠️ `LIKE '%@gmail.com%'` prevents index usage\n- ⚠️ `SELECT *` retrieves unnecessary columns\n- ⚠️ Missing index on `created_at`\n- ⚠️ ORDER BY may require filesort\n\n**Optimized Query**:\n```sql\nSELECT u.id, u.name, u.email, u.created_at \nFROM users u\nWHERE u.email LIKE '%@gmail.com'\nAND u.created_at > '2023-01-01'\nAND u.created_at IS NOT NULL\nORDER BY u.name;\n```\n\n**Recommended Indexes**:\n```sql\nCREATE INDEX idx_users_created_name ON users(created_at, name);\nCREATE INDEX idx_users_email_suffix ON users(email) WHERE email LIKE '%@gmail.com';\n```\n\n## Supported Databases\n\n- PostgreSQL\n- MySQL\n- SQL Server\n- Oracle\n- SQLite\n\n## Tech Stack\n\n- Node.js with SQL parsing libraries\n- OpenAI API for optimization analysis\n- Database-specific query planners\n- Performance metrics calculation\n\n## Use Cases\n\n- Database performance tuning\n- Query review and optimization\n- Learning SQL best practices\n- Production query monitoring\n\n## Performance Insights\n\nEach optimization includes:\n- **Before/After Metrics**: Estimated performance improvement\n- **Explanation**: Why the optimization works\n- **Trade-offs**: Potential drawbacks or considerations\n- **Implementation Steps**: How to apply the changes\n\nPerfect for developers and DBAs who want to write efficient SQL without deep database internals knowledge.",
    "_meta": {
      "filePath": "sql-optimizer.mdx",
      "fileName": "sql-optimizer.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "sql-optimizer"
    },
    "mdx": "var Component=(()=>{var u=Object.create;var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var E=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),x=(i,e)=>{for(var r in e)c(i,r,{get:e[r],enumerable:!0})},d=(i,e,r,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of p(e))!f.call(i,l)&&l!==r&&c(i,l,{get:()=>e[l],enumerable:!(t=m(e,l))||t.enumerable});return i};var S=(i,e,r)=>(r=i!=null?u(g(i)):{},d(e||!i||!i.__esModule?c(r,\"default\",{value:i,enumerable:!0}):r,i)),y=i=>d(c({},\"__esModule\",{value:!0}),i);var a=E((_,s)=>{s.exports=_jsx_runtime});var I={};x(I,{default:()=>h});var n=S(a());function o(i){let e={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"SQL Optimizer\"}),`\n`,(0,n.jsx)(e.p,{children:\"Analyze and optimize SQL queries with AI-powered performance suggestions and detailed explanations.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Features\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Query Analysis\"}),\": Deep analysis of SQL structure and performance patterns\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Optimization Suggestions\"}),\": Specific recommendations for improvement\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Performance Metrics\"}),\": Estimated execution time and resource usage\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Index Recommendations\"}),\": Suggested indexes for better performance\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Query Rewriting\"}),\": Alternative query structures that perform better\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Optimization Categories\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Indexing\"}),\":\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Missing index identification\"}),`\n`,(0,n.jsx)(e.li,{children:\"Composite index suggestions\"}),`\n`,(0,n.jsx)(e.li,{children:\"Unused index detection\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Query Structure\"}),\":\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"JOIN optimization\"}),`\n`,(0,n.jsx)(e.li,{children:\"Subquery to JOIN conversion\"}),`\n`,(0,n.jsx)(e.li,{children:\"WHERE clause improvements\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Performance Patterns\"}),\":\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"N+1 query detection\"}),`\n`,(0,n.jsx)(e.li,{children:\"Inefficient LIKE patterns\"}),`\n`,(0,n.jsx)(e.li,{children:\"Unnecessary DISTINCT usage\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Example Optimization\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Original Query\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-sql\",children:`SELECT * FROM users u\nWHERE u.email LIKE '%@gmail.com%'\nAND u.created_at > '2023-01-01'\nORDER BY u.name;\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"AI Analysis\"}),\":\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"\\u26A0\\uFE0F \",(0,n.jsx)(e.code,{children:\"LIKE '%@gmail.com%'\"}),\" prevents index usage\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u26A0\\uFE0F \",(0,n.jsx)(e.code,{children:\"SELECT *\"}),\" retrieves unnecessary columns\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"\\u26A0\\uFE0F Missing index on \",(0,n.jsx)(e.code,{children:\"created_at\"})]}),`\n`,(0,n.jsx)(e.li,{children:\"\\u26A0\\uFE0F ORDER BY may require filesort\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Optimized Query\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-sql\",children:`SELECT u.id, u.name, u.email, u.created_at \nFROM users u\nWHERE u.email LIKE '%@gmail.com'\nAND u.created_at > '2023-01-01'\nAND u.created_at IS NOT NULL\nORDER BY u.name;\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Recommended Indexes\"}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-sql\",children:`CREATE INDEX idx_users_created_name ON users(created_at, name);\nCREATE INDEX idx_users_email_suffix ON users(email) WHERE email LIKE '%@gmail.com';\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Supported Databases\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"PostgreSQL\"}),`\n`,(0,n.jsx)(e.li,{children:\"MySQL\"}),`\n`,(0,n.jsx)(e.li,{children:\"SQL Server\"}),`\n`,(0,n.jsx)(e.li,{children:\"Oracle\"}),`\n`,(0,n.jsx)(e.li,{children:\"SQLite\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Tech Stack\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Node.js with SQL parsing libraries\"}),`\n`,(0,n.jsx)(e.li,{children:\"OpenAI API for optimization analysis\"}),`\n`,(0,n.jsx)(e.li,{children:\"Database-specific query planners\"}),`\n`,(0,n.jsx)(e.li,{children:\"Performance metrics calculation\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Use Cases\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Database performance tuning\"}),`\n`,(0,n.jsx)(e.li,{children:\"Query review and optimization\"}),`\n`,(0,n.jsx)(e.li,{children:\"Learning SQL best practices\"}),`\n`,(0,n.jsx)(e.li,{children:\"Production query monitoring\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Performance Insights\"}),`\n`,(0,n.jsx)(e.p,{children:\"Each optimization includes:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Before/After Metrics\"}),\": Estimated performance improvement\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Explanation\"}),\": Why the optimization works\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Trade-offs\"}),\": Potential drawbacks or considerations\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Implementation Steps\"}),\": How to apply the changes\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Perfect for developers and DBAs who want to write efficient SQL without deep database internals knowledge.\"})]})}function h(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(o,{...i})}):o(i)}return y(I);})();\n;return Component;",
    "url": "/lab/sql-optimizer",
    "slug": "sql-optimizer",
    "_id": "sql-optimizer.mdx",
    "_raw": {
      "sourceFilePath": "sql-optimizer.mdx",
      "sourceFileName": "sql-optimizer.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "sql-optimizer",
      "contentType": "mdx"
    }
  },
  {
    "title": "Instant Theme Switcher",
    "description": "CSS-only theme switching with zero JavaScript using CSS variables",
    "date": new Date("2024-01-12T00:00:00.000Z"),
    "tags": [
      "css",
      "experiment",
      "accessibility"
    ],
    "demoUrl": "https://codepen.io/kevinhyde/pen/theme-switcher",
    "buildPrompt": "Create a theme switcher that works without JavaScript using only CSS variables and radio buttons",
    "mock": true,
    "content": "A pure CSS theme switching mechanism that demonstrates the power of CSS variables for creating theme-agnostic components.\n\nBuilt in 15 minutes with Claude's assistance, this experiment shows how modern CSS can handle complex UI state without JavaScript.",
    "_meta": {
      "filePath": "theme-switcher.mdx",
      "fileName": "theme-switcher.mdx",
      "directory": ".",
      "extension": "mdx",
      "path": "theme-switcher"
    },
    "mdx": "var Component=(()=>{var u=Object.create;var a=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var S=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),_=(t,e)=>{for(var s in e)a(t,s,{get:e[s],enumerable:!0})},i=(t,e,s,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of l(e))!w.call(t,o)&&o!==s&&a(t,o,{get:()=>e[o],enumerable:!(r=d(e,o))||r.enumerable});return t};var f=(t,e,s)=>(s=t!=null?u(x(t)):{},i(e||!t||!t.__esModule?a(s,\"default\",{value:t,enumerable:!0}):s,t)),C=t=>i(a({},\"__esModule\",{value:!0}),t);var m=S((M,c)=>{c.exports=_jsx_runtime});var g={};_(g,{default:()=>p});var n=f(m());function h(t){let e={p:\"p\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"A pure CSS theme switching mechanism that demonstrates the power of CSS variables for creating theme-agnostic components.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Built in 15 minutes with Claude's assistance, this experiment shows how modern CSS can handle complex UI state without JavaScript.\"})]})}function p(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}return C(g);})();\n;return Component;",
    "url": "/lab/theme-switcher",
    "slug": "theme-switcher",
    "_id": "theme-switcher.mdx",
    "_raw": {
      "sourceFilePath": "theme-switcher.mdx",
      "sourceFileName": "theme-switcher.mdx",
      "sourceFileDir": ".",
      "flattenedPath": "theme-switcher",
      "contentType": "mdx"
    }
  }
]