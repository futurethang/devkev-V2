"var Component=(()=>{var u=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),S=(r,n)=>{for(var i in n)l(r,i,{get:n[i],enumerable:!0})},a=(r,n,i,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of g(n))!y.call(r,t)&&t!==i&&l(r,t,{get:()=>n[t],enumerable:!(o=p(n,t))||o.enumerable});return r};var x=(r,n,i)=>(i=r!=null?u(m(r)):{},a(n||!r||!r.__esModule?l(i,\"default\",{value:r,enumerable:!0}):i,r)),w=r=>a(l({},\"__esModule\",{value:!0}),r);var s=f((_,d)=>{d.exports=_jsx_runtime});var C={};S(C,{default:()=>h});var e=x(s());function c(r){let n={code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"CSS Grid Generator\"}),`\n`,(0,e.jsx)(n.p,{children:\"An intelligent CSS Grid layout generator that transforms natural language descriptions into production-ready CSS Grid code.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Natural Language Input\"}),\": Describe your layout in plain English\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Visual Preview\"}),\": See your grid layout rendered in real-time\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Responsive Variants\"}),\": Automatically generate mobile-friendly versions\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Clean Code Output\"}),\": Export optimized CSS with proper naming conventions\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"How It Works\"}),`\n`,(0,e.jsx)(n.p,{children:\"The tool uses AI to parse layout descriptions and translate them into semantic CSS Grid properties. Simply describe what you want:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:'\"Three equal columns with gaps\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"Header, main content, sidebar, footer layout\"'}),`\n`,(0,e.jsx)(n.li,{children:'\"Masonry-style grid for image gallery\"'}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Tech Stack\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Next.js for the interface\"}),`\n`,(0,e.jsx)(n.li,{children:\"OpenAI API for natural language processing\"}),`\n`,(0,e.jsx)(n.li,{children:\"CSS Grid for layout generation\"}),`\n`,(0,e.jsx)(n.li,{children:\"Tailwind CSS for styling\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example Output\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-css\",children:`.grid-container {\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas: \n    \"header header\"\n    \"main sidebar\"\n    \"footer footer\";\n  gap: 1rem;\n}\n`})}),`\n`,(0,e.jsx)(n.p,{children:\"Perfect for developers who want to quickly prototype layouts without memorizing complex Grid syntax.\"})]})}function h(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(c,{...r})}):c(r)}return w(C);})();\n;return Component;"