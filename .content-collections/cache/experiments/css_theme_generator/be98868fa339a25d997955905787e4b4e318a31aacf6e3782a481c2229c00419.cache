"var Component=(()=>{var p=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var y=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),C=(r,e)=>{for(var o in e)t(r,o,{get:e[o],enumerable:!0})},s=(r,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!b.call(r,l)&&l!==o&&t(r,l,{get:()=>e[l],enumerable:!(i=m(e,l))||i.enumerable});return r};var x=(r,e,o)=>(o=r!=null?p(g(r)):{},s(e||!r||!r.__esModule?t(o,\"default\",{value:r,enumerable:!0}):o,r)),f=r=>s(t({},\"__esModule\",{value:!0}),r);var c=y((w,a)=>{a.exports=_jsx_runtime});var S={};C(S,{default:()=>d});var n=x(c());function h(r){let e={code:\"code\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:`Built this in 2 hours with Claude's help to solve a recurring problem: clients who have \"a brand color\" but need a complete design system. The tool generates a full CSS theme with proper color scales, semantic tokens, and accessibility checks.`}),`\n`,(0,n.jsx)(e.h2,{children:\"How It Works\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Input a single hex color\"}),\" - Your brand's primary color\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"AI generates complementary colors\"}),\" - Using color theory algorithms\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Automatic scale generation\"}),\" - Creates 10 shades (50-900) for each color\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Semantic token mapping\"}),\" - Maps colors to purpose (primary, success, warning, etc.)\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Copy-paste CSS\"}),\" - Get variables ready for your project\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Key Features\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"WCAG contrast checking\"}),\" - Ensures text/background combinations are accessible\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Multiple export formats\"}),\" - CSS variables, Sass, JSON tokens\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Real-time preview\"}),\" - See your theme applied to common UI components\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Color blindness simulation\"}),\" - Check how your palette appears to all users\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"AI Integration\"}),`\n`,(0,n.jsx)(e.p,{children:\"Used Claude to implement the color theory algorithms. The trickiest part was generating perceptually uniform color scales - traditional HSL manipulation creates muddy mid-tones. Claude helped implement a LAB color space approach that maintains vibrancy across the scale.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-javascript\",children:`// Claude-assisted perceptual scaling\nfunction generateColorScale(baseColor, steps = 10) {\n  const lab = hexToLab(baseColor);\n  const scale = [];\n  \n  for (let i = 0; i < steps; i++) {\n    const lightness = 95 - (i * 9); // Even distribution\n    scale.push(labToHex({\n      ...lab,\n      l: lightness\n    }));\n  }\n  \n  return scale;\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Learnings\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Color math is harder than it looks\"}),`\n`,(0,n.jsx)(e.li,{children:\"Accessibility should be built-in, not bolted on\"}),`\n`,(0,n.jsx)(e.li,{children:\"Real-time feedback dramatically improves UX\"}),`\n`,(0,n.jsx)(e.li,{children:\"AI excels at implementing complex algorithms from descriptions\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"This experiment led to a consulting project where I built a custom theme generator for a design system. Sometimes the best portfolio pieces are tools that solve your own problems!\"})]})}function d(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}return f(S);})();\n;return Component;"